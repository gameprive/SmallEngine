#version 330 core

layout(location = 0) in vec3 inVertex;

void main()
{
	gl_Position = vec4(inVertex, 1.0);
}

#version 330 core

out vec4 outColor;

void main()
{
	outColor = vec4(0.5, 0.5, 0.5, 1.0);
}

Init()
==>
	const glm::vec3 data[] =
	{
		{ -1.0f, -1.0f, 0.0f },
		{ 1.0f, -1.0f, 0.0f },
		{ 0.0f, 1.0f, 0.0f },
	};

	buffer = std::make_shared<VertexBuffer>(data, 3, sizeof(data), BufferUsage::Immutable);
	format = std::make_shared<VertexFormat>();
	format->PushAttribute(VectorType::Float3);
	format->Build(buffer);
			
	shaders = std::make_shared<ShaderProgram>("data/shaders/test.vert", "data/shaders/test.frag");
	
	
Run()
==>
	format->Bind();
	shaders->Bind();
	glDrawArrays(GL_TRIANGLES, 0, buffer->GetVertexCount());